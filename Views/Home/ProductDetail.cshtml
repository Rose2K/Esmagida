@model EsmaGida.Models.Product
@{
	ViewData["Title"] = Model.name;
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .product-page-container {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        margin-top: 30px;
        margin-bottom: 30px;
    }
    
    .product-title h1 {
        color: #343a40;
        font-weight: 700;
        font-size: 2.2rem;
        border-bottom: 3px solid #0d6efd;
        display: inline-block;
        padding-bottom: 5px;
    }
    
    .product-brand {
        color: #6c757d;
        font-style: italic;
    }
    
    .product-image-container {
        background-color: white;
        border-radius: 10px;
        padding: 15px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        position: relative;
        overflow: hidden;
        transition: transform 0.3s ease;
    }
    
    .product-image-container:hover {
        transform: translateY(-5px);
    }
    
    .product-image-container img {
        width: 100%;
        height: auto;
        object-fit: contain;
        border-radius: 5px;
        max-height: 400px;
    }
    
    .product-price {
        font-size: 1.8rem;
        font-weight: 700;
        color: #dc3545;
    }
    
    .product-meta-card {
        background-color: white;
        border-radius: 10px;
        border-left: 4px solid #0d6efd;
    }
    
    .add-to-cart {
        background-color: #198754;
        border-color: #198754;
        color: white;
        font-weight: 600;
        border-radius: 30px;
        padding: 10px 25px;
        transition: all 0.3s ease;
    }
    
    .add-to-cart:hover {
        background-color: #157347;
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(0,0,0,0.1);
    }
    
    .quantity .qty {
        border-radius: 5px;
        border: 1px solid #ced4da;
        text-align: center;
        width: 50px;
    }
    
    .quantity .minus, .quantity .plus {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        border-radius: 5px;
        cursor: pointer;
        padding: 5px 10px;
    }
    
    .related-title {
        position: relative;
        padding-left: 15px;
        margin-bottom: 25px;
        color: #343a40;
    }
    
    .related-title::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 5px;
        background-color: #0d6efd;
        border-radius: 10px;
    }
    
    .sale-flash {
        position: absolute;
        top: 15px;
        left: 15px;
        z-index: 5;
        font-weight: 600;
        letter-spacing: 1px;
    }
    
    .breadcrumb {
        background-color: rgba(255,255,255,0.5);
        padding: 10px 15px;
        border-radius: 30px;
    }
    
    .breadcrumb-item a {
        color: #0d6efd;
        font-weight: 500;
        text-decoration: none;
    }
    
    .breadcrumb-item a:hover {
        text-decoration: underline;
    }
</style>

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="mt-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("indexx", "Home")">Ana Sayfa</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("shop", "Home")">Ürünler</a></li>
        <li class="breadcrumb-item active">@Model.name</li>
    </ol>
</nav>

<!-- Product Content -->
<div class="product-page-container">
    <div class="row">
        <div class="col-md-6">
            <div class="product-image-container">
                @if (!string.IsNullOrEmpty(Model.image_url))
                {
                    @if (Model.image_url.StartsWith("http"))
                    {
                        <img src="@Model.image_url" alt="@Model.name">
                    }
                    else
                    {
                        <img src="@Model.image_url" alt="@Model.name">
                    }
                    
                    @if (Model.stock_quantity <= 0)
                    {
                        <div class="sale-flash badge bg-secondary p-2">Stokta Yok</div>
                    }
                    else if (Model.price < 100)
                    {
                        <div class="sale-flash badge bg-danger p-2 text-uppercase">İndirim!</div>
                    }
                }
                else
                {
                    <img src="~/images/shop/brand.jpg" alt="@Model.name">
                    
                    @if (Model.stock_quantity <= 0)
                    {
                        <div class="sale-flash badge bg-secondary p-2">Stokta Yok</div>
                    }
                    else if (Model.price < 100)
                    {
                        <div class="sale-flash badge bg-danger p-2 text-uppercase">İndirim!</div>
                    }
                }
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="product-title mb-3">
                <h1>@Model.name</h1>
                <div class="product-brand">Esma Gıda</div>
            </div>
            
            <div class="d-flex align-items-center justify-content-between mb-4">
                <div class="product-price">@Model.price.ToString("C", new System.Globalization.CultureInfo("tr-TR"))</div>
                
                <div class="product-rating">
                    <i class="bi-star-fill text-warning"></i>
                    <i class="bi-star-fill text-warning"></i>
                    <i class="bi-star-fill text-warning"></i>
                    <i class="bi-star-fill text-warning"></i>
                    <i class="bi-star-half text-warning"></i>
                </div>
            </div>
            
            <div class="product-description mb-4">
                @if (!string.IsNullOrEmpty(Model.description))
                {
                    <p>@Model.description</p>
                }
                else
                {
                    <p>Bu ürün için henüz detaylı bir açıklama eklenmiş değil.</p>
                }
            </div>
            
            <div class="d-flex align-items-center mb-4">
                @if (Model.stock_quantity > 0)
                {
                    <div class="quantity clearfix me-3">
                        <input type="button" value="-" class="minus">
                        <input type="text" step="1" min="1" name="quantity" value="1" title="Qty" class="qty" id="productQuantity" />
                        <input type="button" value="+" class="plus">
                    </div>
                    <button id="addToCartBtn" class="add-to-cart btn" data-product-id="@Model.id">
                        <i class="bi bi-cart-plus me-2"></i>Sepete Ekle
                    </button>
                }
                else
                {
                    <div class="alert alert-warning mb-0 w-100">
                        <i class="bi bi-exclamation-triangle me-2"></i>Bu ürün şu anda stokta yok.
                    </div>
                }
            </div>
            
            <div class="card product-meta-card mb-0">
                <div class="card-body">
                    <ul class="list-group list-group-flush mb-0">
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0 py-2">
                            <span class="text-muted">Stok Durumu:</span>
                            @if (Model.stock_quantity > 0)
                            {
                                <span class="badge bg-success rounded-pill">Stokta (@Model.stock_quantity)</span>
                            }
                            else
                            {
                                <span class="badge bg-danger rounded-pill">Stokta Yok</span>
                            }
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0 py-2">
                            <span class="text-muted">Ürün Kodu:</span>
                            <span class="badge bg-light text-dark">@Model.id</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Related Products -->
<div class="container mt-5">
    <h4 class="related-title">Benzer Ürünler</h4>
    <div class="row">
        @if (ViewBag.RelatedProducts != null && ((IEnumerable<Product>)ViewBag.RelatedProducts).Any())
        {
            foreach (var relatedProduct in (IEnumerable<Product>)ViewBag.RelatedProducts)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="card h-100 border-0 shadow-sm product-card">
                        <div class="position-relative">
                            @if (!string.IsNullOrEmpty(relatedProduct.image_url))
                            {
                                <a href="@Url.Action("ProductDetail", "Home", new { id = relatedProduct.id })">
                                    @if (relatedProduct.image_url.StartsWith("http"))
                                    {
                                        <img src="@relatedProduct.image_url" class="card-img-top" alt="@relatedProduct.name">
                                    }
                                    else
                                    {
                                        <img src="@relatedProduct.image_url" class="card-img-top" alt="@relatedProduct.name">
                                    }
                                </a>
                            }
                            else
                            {
                                <a href="@Url.Action("ProductDetail", "Home", new { id = relatedProduct.id })">
                                    <img src="~/images/shop/brand.jpg" class="card-img-top" alt="@relatedProduct.name">
                                </a>
                            }
                            
                            @if (relatedProduct.stock_quantity <= 0)
                            {
                                <div class="badge bg-secondary position-absolute top-0 start-0 m-3">Stokta Yok</div>
                            }
                            else if (relatedProduct.price < 100)
                            {
                                <div class="badge bg-danger position-absolute top-0 start-0 m-3">İndirim!</div>
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">
                                <a href="@Url.Action("ProductDetail", "Home", new { id = relatedProduct.id })" class="text-decoration-none text-dark">
                                    @relatedProduct.name
                                </a>
                            </h5>
                            <p class="card-text fw-bold text-danger">@relatedProduct.price.ToString("C", new System.Globalization.CultureInfo("tr-TR"))</p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center py-5">
                <p>Benzer ürün bulunamadı</p>
            </div>
        }
    </div>
</div>

@section Scripts {
	<script>
		$(document).ready(function() {
			// Quantity buttons functionality
			$('.minus').click(function() {
				var $input = $(this).next('input.qty');
				var val = parseInt($input.val());
				if (val > 1) {
					$input.val(val - 1).change();
				}
			});
			
			$('.plus').click(function() {
				var $input = $(this).prev('input.qty');
				var val = parseInt($input.val());
				var max = @Model.stock_quantity;
				if (val < max) {
					$input.val(val + 1).change();
				} else {
					showErrorNotification('Üzgünüz, stokta sadece ' + max + ' adet ürün bulunmaktadır.');
				}
			});
			
			// Add to cart button click
			$('#addToCartBtn').click(function() {
				var productId = $(this).data('product-id');
				var quantity = parseInt($('#productQuantity').val());
				
				if (quantity <= 0) {
					showErrorNotification('Lütfen geçerli bir miktar girin.');
					return;
				}
				
				// Sepete eklemeden önce butonu devre dışı bırak ve yükleniyor göster
				var $btn = $(this);
				var originalText = $btn.html();
				$btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Ekleniyor...');
				
				// Add to cart via AJAX
				$.ajax({
					url: '@Url.Action("AddToCart", "Cart")',
					type: 'POST',
					data: {
						productId: productId,
						quantity: quantity
					},
					success: function(response) {
						if (response.success) {
							// Show success message
							showSuccessNotification('Ürün sepete eklendi!');
							
							// Update cart item count
							updateCartItemCount(response.itemCount);
						} else if (response.requireLogin) {
							// Kullanıcının giriş yapması gerekiyor
							showErrorNotification('Bu işlemi gerçekleştirmek için giriş yapmalısınız.');
							
							// 2 saniye sonra login sayfasına yönlendir
							setTimeout(function() {
								window.location.href = '@Url.Action("Login", "Home")';
							}, 2000);
						} else if (response.message) {
							showErrorNotification(response.message);
						}
					},
					error: function(xhr) {
						// Parse error from response if possible
						try {
							var errorResponse = JSON.parse(xhr.responseText);
							showErrorNotification(errorResponse.message || 'Ürün sepete eklenirken bir hata oluştu.');
						} catch (e) {
							showErrorNotification(xhr.responseText || 'Ürün sepete eklenirken bir hata oluştu.');
						}
					},
					complete: function() {
						// İşlem tamamlandığında butonu eski haline getir
						$btn.prop('disabled', false).html(originalText);
					}
				});
			});
			
			// Helper function to show notification
			function showCartNotification(message) {
				var notification = $('<div class="cart-notification"></div>')
					.text(message)
					.css({
						'position': 'fixed',
						'top': '20px',
						'right': '20px',
						'background-color': '#28a745',
						'color': 'white',
						'padding': '10px 20px',
						'border-radius': '5px',
						'z-index': 9999,
						'opacity': 0,
						'box-shadow': '0 4px 8px rgba(0,0,0,0.1)'
					});
				
				$('body').append(notification);
				notification.animate({opacity: 1}, 300);
				
				setTimeout(function() {
					notification.animate({opacity: 0}, 300, function() {
						$(this).remove();
					});
				}, 3000);
			}
			
			// Helper function to update cart count in header
			function updateCartItemCount(count) {
				var cartBadge = $('.cart-count-badge');
				if (cartBadge.length) {
					cartBadge.text(count);
					
					// Eğer sayı 0 ise badge'ı gizle, değilse göster
					if (count <= 0) {
						cartBadge.hide();
					} else {
						cartBadge.show();
					}
				} else {
					// If badge doesn't exist yet, create it
					var cartIcon = $('.cart-icon');
					if (cartIcon.length) {
						cartIcon.append('<span class="cart-count-badge position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">' + count + '</span>');
					}
				}
			}
		});
	</script>
} 