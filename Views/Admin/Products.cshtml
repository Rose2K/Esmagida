@model List<EsmaGida.Models.Product>
@{
    ViewData["Title"] = "Ürün Yönetimi";
    Layout = "_AdminLayout";
}

<div class="p-4">
    <div class="flex justify-between items-center mb-4">
        <h1 class="text-2xl font-bold">Ürün Yönetimi</h1>
        <button id="newProductBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
            </svg>
            Yeni Ürün Ekle
        </button>
    </div>
    
    <div class="mb-4 flex justify-between">
        <div class="relative">
            <input type="text" placeholder="Ürün Ara..." class="pl-10 pr-4 py-2 border rounded-md w-64">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 absolute left-3 top-2.5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
        </div>
        
        <div class="flex space-x-2">
            <button class="border p-2 rounded-md">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z" clip-rule="evenodd" />
                </svg>
            </button>
            <button class="border p-2 rounded-md">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z" />
                    <path d="M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z" />
                    <path d="M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z" />
                </svg>
            </button>
        </div>
    </div>
    
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ürün ID</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ürün Adı</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Kategori ID</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stok</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fiyat</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">İşlemler</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model != null && Model.Any())
                {
                    @foreach (var product in Model)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap font-medium text-red-600">#@product.id</td>
                            <td class="px-6 py-4 whitespace-nowrap">@product.name</td>
                            <td class="px-6 py-4 whitespace-nowrap">@(product.category_id ?? 0)</td>
                            <td class="px-6 py-4 whitespace-nowrap">@product.stock_quantity</td>
                            <td class="px-6 py-4 whitespace-nowrap">@product.price.ToString("N2") ₺</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <button class="text-indigo-600 hover:text-indigo-900 mr-3 edit-product" data-id="@product.id">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                    </svg>
                                </button>
                                <button class="text-red-600 hover:text-red-900 delete-product" data-id="@product.id">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-gray-500">Kayıtlı ürün bulunamadı.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    <div class="mt-4 flex items-center justify-between">
        <p class="text-sm text-gray-600">Toplam @(Model?.Count ?? 0) ürün gösteriliyor</p>
        <div class="flex space-x-1">
            <button class="px-3 py-1 border rounded-md bg-gray-100">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
            </button>
            <button class="px-3 py-1 border rounded-md bg-blue-600 text-white">1</button>
            <button class="px-3 py-1 border rounded-md bg-gray-100">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
            </button>
        </div>
    </div>
    
    <!-- Ürün Ekleme Modal -->
    <div id="productModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-md">
            <div class="p-4 border-b">
                <h3 class="text-lg font-medium" id="modalTitle">Yeni Ürün Ekle</h3>
            </div>
            <div class="p-4">
                <form id="productForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="productId" value="0" />
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Ürün Adı</label>
                        <input type="text" id="productName" class="w-full p-2 border rounded-md">
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Açıklama</label>
                        <textarea id="productDescription" class="w-full p-2 border rounded-md" rows="3"></textarea>
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Kategori ID</label>
                        <select id="productCategoryId" class="w-full p-2 border rounded-md">
                            <option value="1">Beyaz Un</option>
                            <option value="2">Kek Unu</option>
                            <option value="3">Yulaf Unu</option>
                            <option value="4">Mısır Unu</option>
                        </select>
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Stok Miktarı</label>
                        <input type="number" id="productStock" class="w-full p-2 border rounded-md">
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Fiyat (₺)</label>
                        <input type="number" id="productPrice" step="0.01" class="w-full p-2 border rounded-md">
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium mb-1">Ürün Görseli <span class="text-gray-500 text-xs">(İsteğe bağlı)</span></label>
                        <input type="file" id="productImage" class="w-full p-2 border rounded-md" accept="image/*">
                        <img id="imagePreview" class="mt-2 hidden max-h-32" alt="Görsel Önizleme">
                        <p class="text-xs text-gray-500 mt-1">Resim seçilmezse, ürün varsayılan resim ile gösterilecektir.</p>
                    </div>
                </form>
            </div>
            <div class="p-4 border-t flex justify-end space-x-3">
                <button id="cancelProductBtn" class="px-4 py-2 border rounded-md">İptal</button>
                <button id="saveProductBtn" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('productModal');
            const newProductBtn = document.getElementById('newProductBtn');
            const cancelProductBtn = document.getElementById('cancelProductBtn');
            const saveProductBtn = document.getElementById('saveProductBtn');
            const editButtons = document.querySelectorAll('.edit-product');
            const deleteButtons = document.querySelectorAll('.delete-product');
            const modalTitle = document.getElementById('modalTitle');
            
            // Form elemanları
            const productIdInput = document.getElementById('productId');
            const productNameInput = document.getElementById('productName');
            const productDescriptionInput = document.getElementById('productDescription');
            const productCategoryIdInput = document.getElementById('productCategoryId');
            const productStockInput = document.getElementById('productStock');
            const productPriceInput = document.getElementById('productPrice');
            const productImageInput = document.getElementById('productImage');
            const imagePreview = document.getElementById('imagePreview');
            
            // Görsel önizleme
            productImageInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.classList.remove('hidden');
                    }
                    reader.readAsDataURL(file);
                } else {
                    imagePreview.classList.add('hidden');
                }
            });
            
            // Formu temizleme fonksiyonu
            function resetForm() {
                productIdInput.value = '0';
                productNameInput.value = '';
                productDescriptionInput.value = '';
                productCategoryIdInput.value = '1';
                productStockInput.value = '';
                productPriceInput.value = '';
                productImageInput.value = '';
                imagePreview.classList.add('hidden');
                modalTitle.textContent = 'Yeni Ürün Ekle';
            }
            
            // Yeni ürün ekle butonuna tıklanınca
            newProductBtn.addEventListener('click', function() {
                resetForm();
                modal.classList.remove('hidden');
            });
            
            // İptal butonuna tıklanınca
            cancelProductBtn.addEventListener('click', function() {
                modal.classList.add('hidden');
            });
            
            // Düzenle butonlarına tıklanınca
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.getAttribute('data-id');
                    
                    // Ürün bilgilerini getir
                    fetch(`/Admin/GetProduct?id=${productId}`)
                        .then(response => response.json())
                        .then(product => {
                            productIdInput.value = product.id;
                            productNameInput.value = product.name;
                            productDescriptionInput.value = product.description || '';
                            productCategoryIdInput.value = product.category_id || '1';
                            productStockInput.value = product.stock_quantity;
                            productPriceInput.value = product.price;
                            
                            // Form için resim alanını sıfırla
                            productImageInput.value = '';
                            
                            // Eğer ürünün görseli varsa önizleme göster
                            if (product.image_url) {
                                imagePreview.src = product.image_url;
                                imagePreview.classList.remove('hidden');
                            } else {
                                imagePreview.classList.add('hidden');
                            }
                            
                            modalTitle.textContent = 'Ürün Düzenle';
                            modal.classList.remove('hidden');
                        })
                        .catch(error => {
                            console.error('Hata:', error);
                            alert('Ürün bilgileri alınırken bir hata oluştu');
                        });
                });
            });
            
            // Sil butonlarına tıklanınca
            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.getAttribute('data-id');
                    
                    if(confirm('Bu ürünü silmek istediğinizden emin misiniz?')) {
                        // Ürünü sil
                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                        
                        fetch(`/Admin/DeleteProduct?id=${productId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': token
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if(data.success) {
                                alert('Ürün başarıyla silindi');
                                // Sayfa yenileniyor
                                window.location.reload();
                            } else {
                                alert('Ürün silinirken bir hata oluştu: ' + (data.message || ''));
                            }
                        })
                        .catch(error => {
                            console.error('Hata:', error);
                            alert('Bir hata oluştu');
                        });
                    }
                });
            });
            
            // Kaydet butonuna tıklanınca
            saveProductBtn.addEventListener('click', function() {
                // Form verilerini al
                const productId = productIdInput.value;
                const productName = productNameInput.value;
                const productDescription = productDescriptionInput.value;
                const productCategoryId = productCategoryIdInput.value;
                const productStock = productStockInput.value;
                const productPrice = productPriceInput.value;
                const productImage = productImageInput.files[0];
                
                // Form validasyonu
                if (!productName || !productStock || !productPrice) {
                    alert('Ürün adı, stok miktarı ve fiyat zorunludur');
                    return;
                }
                
                // FormData oluştur
                const formData = new FormData();
                formData.append('id', parseInt(productId) || 0);
                formData.append('name', productName.trim());
                formData.append('description', productDescription.trim() || '');
                
                // Kategori ID'yi kontrol et - 0 veya geçersiz değer ise göndermiyoruz
                const categoryId = parseInt(productCategoryId);
                if (categoryId && categoryId > 0) {
                    formData.append('category_id', categoryId);
                } else {
                    // Null gönder
                    formData.append('category_id', '');
                }
                
                formData.append('stock_quantity', parseInt(productStock) || 0);
                formData.append('price', parseFloat(productPrice.replace(',', '.')) || 0);
                
                if (productImage) {
                    formData.append('ImageFile', productImage);
                }
                
                // Ekleme veya güncelleme işlemi
                const url = productId === '0' ? '/Admin/AddProduct' : '/Admin/UpdateProduct';
                
                fetch(url, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(productId === '0' ? 'Ürün başarıyla eklendi' : 'Ürün başarıyla güncellendi');
                        modal.classList.add('hidden');
                        // Sayfayı yenile
                        window.location.reload();
                    } else {
                        console.error('Sunucu hatası:', data);
                        let errorMessage = 'İşlem sırasında bir hata oluştu: ';
                        
                        if (data.message) {
                            errorMessage += data.message;
                        }
                        
                        if (data.errors && data.errors.length > 0) {
                            errorMessage += '\n\n' + data.errors.join('\n');
                        }
                        
                        alert(errorMessage);
                    }
                })
                .catch(error => {
                    console.error('Fetch hatası:', error);
                    alert('Bir hata oluştu: ' + error.message);
                });
            });
            
            // Arama işlevi
            const searchInput = document.querySelector('input[placeholder="Ürün Ara..."]');
            if (searchInput) {
                searchInput.addEventListener('keyup', function() {
                    const searchValue = this.value.toLowerCase();
                    const rows = document.querySelectorAll('tbody tr');
                    
                    rows.forEach(row => {
                        const text = row.textContent.toLowerCase();
                        if (text.includes(searchValue)) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    });
                });
            }
        });
    </script>
} 